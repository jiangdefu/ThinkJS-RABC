{
    "version": 3,
    "sources": [
        "../../../src/admin/model/usergroup.js"
    ],
    "names": [
        "getGroupByUser",
        "user",
        "loadUserGroupTreeTable",
        "model",
        "where",
        "delstatus",
        "status",
        "select",
        "result",
        "data",
        "think",
        "isEmpty",
        "loadUserGroupTable",
        "pid",
        "offset",
        "limit",
        "order",
        "param",
        "str_obj",
        "name",
        "count",
        "total",
        "rows",
        "updateuserGroup",
        "userGroup",
        "id",
        "update",
        "addUserGroup",
        "bret",
        "thenAdd",
        "code",
        "type",
        "loaduserGroupTree",
        "treeList",
        "Array",
        "push",
        "open",
        "forEach",
        "element",
        "updateStatus",
        "delUserGroup",
        "base"
    ],
    "mappings": "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",
    "file": "../../../src/admin/model/usergroup.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\r\n// | ThinkJS-RABC [ 通用权限管理系统 ]\r\n// +----------------------------------------------------------------------\r\n// | Nanjing Digital Technology Co., Ltd.\r\n// +----------------------------------------------------------------------\r\n// | Copyright (c) 2017 http://www.51-health.com All rights reserved.\r\n// +----------------------------------------------------------------------\r\n// | Author: Devlin <Devlinheart@qq.com>\r\n// +----------------------------------------------------------------------\r\n// | Create: 2017-06-20\r\n// +----------------------------------------------------------------------\r\n\r\n'use strict';\r\n/**\r\n * model\r\n */\r\nexport default class extends think.model.base {\r\n    /**\r\n     * 通过用户查找所在用户组\r\n     * @param {*} user  //当前登陆用户 \r\n     */\r\n    async getGroupByUser(user){\r\n        \r\n    }\r\n     /**\r\n     * 加载用户组Tree表格\r\n     */\r\n    async loadUserGroupTreeTable(){\r\n        let result  = await this.model(\"group\").where({delstatus:1,status:1}).select();\r\n        let data = null;\r\n        if(!think.isEmpty(result)){\r\n            \r\n        }\r\n        return data;\r\n    }\r\n\r\n     /**\r\n     * 加载字典组表格\r\n     * @param {*} pid \r\n     * @param {*} offset \r\n     * @param {*} limit \r\n     * @param {*} order \r\n     * @param {*} param \r\n     */\r\n    async loadUserGroupTable(pid,offset,limit,order,param){\r\n        let str_obj = {delstatus:1};\r\n        if(!think.isEmpty(pid)){\r\n            str_obj.pid = pid;\r\n        }\r\n        if(!think.isEmpty(param)){\r\n            str_obj.name = param;\r\n        }\r\n        let data = await this.model(\"group\").where(str_obj).order( order+\" desc\").limit(offset,limit).select();\r\n        let count = await this.model(\"group\").where(str_obj).count();\r\n        return {total:count,rows:data};\r\n    }\r\n    /**\r\n     * 更新用户组\r\n     * @param {*} userGroup \r\n     */\r\n    async updateuserGroup(userGroup){\r\n         return await this.model(\"group\").where({id:userGroup.id}).update(userGroup); \r\n    }\r\n    /**\r\n     * 添加用户组\r\n     * @param {*} userGroup \r\n     */\r\n    async addUserGroup(userGroup){\r\n        let bret = {\r\n            status:0\r\n        }\r\n        let result = await this.model(\"group\").thenAdd(userGroup,{code:userGroup.code,delstatus:1});\r\n        if(!think.isEmpty(result)){\r\n            if(result.type=='exist'){\r\n                bret.status = 2;\r\n            }\r\n            else{\r\n                bret.status = 1;\r\n            }\r\n        }\r\n        return bret;\r\n    }\r\n    /**\r\n     * 加载用户组树结构\r\n     */\r\n    async loaduserGroupTree(){\r\n        let result = await this.model(\"group\").where({delstatus:1,status:1}).select();\r\n        let treeList = new Array();\r\n        treeList.push({id:0,pid:-1,name:\"用户组\",code:\"user_group\",open:true});\r\n        result.forEach(function(element) {\r\n             treeList.push({id:element.id,pid:0,name:element.name,code:element.code});\r\n        }, this);\r\n        return treeList;\r\n    }\r\n    /**\r\n     * 更新状态\r\n     * @param {*} id \r\n     * @param {*} status \r\n     */\r\n    async updateStatus(id,status){\r\n        return await this.model(\"group\").where({id:id}).update({status:status});\r\n    }\r\n\r\n     /**\r\n     * 删除用户组\r\n     * @param {*} id \r\n     */\r\n    async delUserGroup(id){\r\n        //逻辑删除\r\n        return await this.model(\"group\").where({id:id}).update({delstatus:0});\r\n    }\r\n\r\n}"
    ]
}