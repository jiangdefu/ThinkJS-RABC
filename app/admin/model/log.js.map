{
    "version": 3,
    "sources": [
        "../../../src/admin/model/log.js"
    ],
    "names": [
        "recodeLog",
        "ip",
        "url",
        "param",
        "username",
        "userid",
        "log",
        "create_time",
        "Format",
        "Date",
        "model",
        "add",
        "loadLogTable",
        "limit",
        "offset",
        "address",
        "startTime",
        "endTime",
        "data",
        "total",
        "rows",
        "str_where",
        "think",
        "isEmpty",
        "where",
        "count",
        "countSql",
        "order",
        "select",
        "result",
        "base"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAII;;;;;;;qBAOMA,S;6GAAUC,E,EAAGC,G,EAAIC,K,EAAMC,Q,EAASC,M;;;;;;AAC9BC,+B,GAAK;AACLL,oCAAGA,EADE;AAELC,qCAAIA,GAFC;AAGLC,uCAAMA,KAHD;AAILC,0CAASA,QAJJ;AAKLC,wCAAOA,MALF;AAMLE,6CAAYC,OAAO,IAAIC,IAAJ,EAAP,EAAkB,qBAAlB;AANP,6B;;mCAQH,KAAKC,KAAL,CAAW,KAAX,EAAkBC,GAAlB,CAAsBL,GAAtB,C;;;;;;;;;;;;;;;;AAEV;;;;;;;;;;;;qBAUMM,Y;+GAAaC,K,EAAMC,M,EAAOb,E,EAAGc,O,EAAQX,Q,EAASY,S,EAAUC,O;;;;;;AACtDC,gC,GAAO;AACPC,uCAAM,CADC;AAEPC,sCAAK;AAFE,6B;AAIPC,qC,GAAW,M;;AACf,gCAAG,CAACC,MAAMC,OAAN,CAActB,EAAd,CAAJ,EAAsB;AAClBoB,4CAAYA,YAAU,YAAV,GAAuBpB,EAAvB,GAA0B,GAAtC;AACH;AACD,gCAAG,CAACqB,MAAMC,OAAN,CAAcR,OAAd,CAAJ,EAA2B;AACvBM,4CAAYA,YAAU,kBAAV,GAA6BN,OAA7B,GAAqC,IAAjD;AACH;AACD,gCAAG,CAACO,MAAMC,OAAN,CAAcnB,QAAd,CAAJ,EAA4B;AACxBiB,4CAAYA,YAAU,mBAAV,GAA8BjB,QAA9B,GAAuC,GAAnD;AACH;AACD,gCAAG,CAACkB,MAAMC,OAAN,CAAcP,SAAd,CAAJ,EAA6B;AACxBK,4CAAYA,YAAU,sBAAV,GAAiCL,SAAjC,GAA2C,EAAvD;AACJ;AACD,gCAAG,CAACM,MAAMC,OAAN,CAAcN,OAAd,CAAJ,EAA2B;AACtBI,4CAAYA,YAAU,sBAAV,GAAiCJ,OAAjC,GAAyC,EAArD;AACJ;;mCACoB,KAAKP,KAAL,CAAW,KAAX,EAAkBc,KAAlB,CAAwBH,SAAxB,EAAmCI,KAAnC,E;;;AAAjBC,oC;;kCACDA,WAAS,C;;;;;AACRR,iCAAKC,KAAL,GAAaO,QAAb;;mCACmB,KAAKhB,KAAL,CAAW,KAAX,EAAkBc,KAAlB,CAAwBH,SAAxB,EAAmCM,KAAnC,CAAyC,kBAAzC,EAA6Dd,KAA7D,CAAmEC,MAAnE,EAA0ED,KAA1E,EAAiFe,MAAjF,E;;;AAAfC,kC;;AACJX,iCAAKE,IAAL,GAAYS,MAAZ;;;8DAEGX,I;;;;;;;;;;;;;;;;;;EAxDcI,MAAMZ,KAAN,CAAYoB,I",
    "file": "../../../src/admin/model/log.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\r\n// | ThinkJS-RABC [ 通用权限管理系统 ]\r\n// +----------------------------------------------------------------------\r\n// | Nanjing Digital Technology Co., Ltd.\r\n// +----------------------------------------------------------------------\r\n// | Copyright (c) 2017 http://www.51-health.com All rights reserved.\r\n// +----------------------------------------------------------------------\r\n// | Author: Devlin <Devlinheart@qq.com>\r\n// +----------------------------------------------------------------------\r\n// | Create: 2017-06-20\r\n// +----------------------------------------------------------------------\r\n\r\n'use strict';\r\n/**\r\n * model\r\n */\r\nexport default class extends think.model.base {\r\n    /**\r\n     * 记录操作日志\r\n     * @param {*} ip  客户端IP\r\n     * @param {*} url 操作URL\r\n     * @param {*} param 传递参数\r\n     * @param {*} user 当前登陆的用户\r\n     */\r\n    async recodeLog(ip,url,param,username,userid){\r\n        let log ={\r\n            ip:ip,\r\n            url:url,\r\n            param:param,\r\n            username:username,\r\n            userid:userid,\r\n            create_time:Format(new Date(),\"yyyy-MM-dd hh:mm:ss\")\r\n        }\r\n        await this.model(\"log\").add(log);\r\n    }\r\n    /**\r\n     * 加载日志表格\r\n     * @param {*} limit \r\n     * @param {*} offset \r\n     * @param {*} ip        客户端IP地址\r\n     * @param {*} address   请求地址\r\n     * @param {*} username  用户名\r\n     * @param {*} startTime 开始时间\r\n     * @param {*} endTime   结束时间\r\n     */\r\n    async loadLogTable(limit,offset,ip,address,username,startTime,endTime){\r\n        let data = {\r\n            total:0,\r\n            rows:[]\r\n        }\r\n        let str_where ='1=1 ';\r\n        if(!think.isEmpty(ip)){\r\n            str_where = str_where+\" and ip ='\"+ip+\"'\";\r\n        }\r\n        if(!think.isEmpty(address)){\r\n            str_where = str_where+\" and url like '%\"+address+\"%'\";\r\n        }\r\n        if(!think.isEmpty(username)){\r\n            str_where = str_where+\" and username = '\"+username+\"'\";\r\n        }\r\n        if(!think.isEmpty(startTime)){\r\n             str_where = str_where+\" and create_time > =\"+startTime+\"\";\r\n        }\r\n        if(!think.isEmpty(endTime)){\r\n             str_where = str_where+\" and create_time < =\"+endTime+\"\";\r\n        }\r\n        let countSql = await this.model(\"log\").where(str_where).count();\r\n        if(countSql>0){\r\n            data.total = countSql;\r\n            let result = await this.model(\"log\").where(str_where).order(\"create_time desc\").limit(offset,limit).select();\r\n            data.rows = result;\r\n        }\r\n        return data;\r\n    }\r\n    \r\n}\r\n"
    ]
}