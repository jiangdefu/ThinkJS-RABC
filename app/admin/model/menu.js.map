{
    "version": 3,
    "sources": [
        "../../../src/admin/model/menu.js"
    ],
    "names": [
        "loadAllMenu",
        "model",
        "where",
        "delstatus",
        "ismenu",
        "select",
        "loadMenuByUser",
        "user",
        "think",
        "isEmpty",
        "loadMenuByUrl",
        "url",
        "find",
        "loadMenuTable",
        "pid",
        "offset",
        "limit",
        "order",
        "param",
        "data",
        "total",
        "rows",
        "str_where",
        "count",
        "countSql",
        "result",
        "addMenu",
        "menu",
        "thenAdd",
        "code",
        "findMenuById",
        "id",
        "delMenu",
        "delete",
        "sortMenu",
        "updateMany",
        "base"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAII;;;qBAGMA,W;;;;;;6DACK,KAAKC,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAACC,WAAU,CAAX,EAAaC,QAAO,CAApB,EAAzB,EAAiDC,MAAjD,E;;;;;;;;;;;;;;;;AAEX;;;;;;qBAIMC,c;+GAAeC,I;;;;;AACjB,gCAAG,CAACC,MAAMC,OAAN,CAAcF,IAAd,CAAJ,EAAwB,CAEvB;;;;;;;;;;;;;;;;AAEL;;;;;;qBAIMG,a;+GAAcC,G;;;;;8DACT,KAAKV,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAACS,KAAIA,GAAL,EAASR,WAAU,CAAnB,EAAqBC,QAAO,CAA5B,EAAzB,EAAyDQ,IAAzD,E;;;;;;;;;;;;;;;;AAEX;;;;;;;;;;qBAQMC,a;+GAAcC,G,EAAIC,M,EAAOC,K,EAAMC,K,EAAMC,K;;;;;;AACnCC,gC,GAAO,EAACC,OAAM,CAAP,EAASC,MAAK,EAAd,E;AACPC,qC,GAAY,K;;AAChB,gCAAG,CAACd,MAAMC,OAAN,CAAcK,GAAd,CAAJ,EAAuB;AACnBQ,6CAAa,gBAAcR,GAAd,GAAkB,GAA/B;AACH;AACD,gCAAG,CAACN,MAAMC,OAAN,CAAcS,KAAd,CAAJ,EAAyB;AACrBI,6CAAa,wBAAsBJ,KAAtB,GAA4B,mBAA5B,GAAgDA,KAAhD,GAAsD,KAAnE;AACH;;mCACoB,KAAKjB,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyBoB,SAAzB,EAAoCC,KAApC,E;;;AAAjBC,oC;;kCACDA,WAAS,C;;;;;AACRL,iCAAKC,KAAL,GAAaI,QAAb;;mCACmB,KAAKvB,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyBoB,SAAzB,EAAoCL,KAApC,CAA0C,UAA1C,EAAsDD,KAAtD,CAA4DD,MAA5D,EAAmEC,KAAnE,EAA0EX,MAA1E,E;;;AAAfoB,kC;;AACJN,iCAAKE,IAAL,GAAWI,MAAX;;;8DAEGN,I;;;;;;;;;;;;;;;;AAEX;;;;;;qBAIMO,O;+GAAQC,I;;;;;8DACH,KAAK1B,KAAL,CAAW,MAAX,EAAmB2B,OAAnB,CAA2BD,IAA3B,EAAgC,EAACE,MAAKF,KAAKE,IAAX,EAAhC,C;;;;;;;;;;;;;;;;AAEX;;;;;;qBAIMC,Y;+GAAaC,E;;;;;;mCACF,KAAK9B,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAAC6B,IAAGA,EAAJ,EAAzB,EAAkCnB,IAAlC,E;;;;;;;;;;;;;;;;;;;AAElB;;;;;;qBAIOoB,O;+GAAQD,E;;;;;;mCACG,KAAK9B,KAAL,CAAW,MAAX,EAAmBC,KAAnB,CAAyB,EAAC6B,IAAGA,EAAJ,EAAzB,EAAkCE,MAAlC,E;;;;;;;;;;;;;;;;;;;AAEjB;;;;;;qBAIMC,Q;+GAASf,I;;;;;8DACJ,KAAKlB,KAAL,CAAW,MAAX,EAAmBkC,UAAnB,CAA8BhB,IAA9B,C;;;;;;;;;;;;;;;;;;EA1EcX,MAAMP,KAAN,CAAYmC,I",
    "file": "../../../src/admin/model/menu.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\r\n// | ThinkJS-RABC [ 通用权限管理系统 ]\r\n// +----------------------------------------------------------------------\r\n// | Nanjing Digital Technology Co., Ltd.\r\n// +----------------------------------------------------------------------\r\n// | Copyright (c) 2017 http://www.51-health.com All rights reserved.\r\n// +----------------------------------------------------------------------\r\n// | Author: Devlin <Devlinheart@qq.com>\r\n// +----------------------------------------------------------------------\r\n// | Create: 2017-06-20\r\n// +----------------------------------------------------------------------\r\n\r\n'use strict';\r\n/**\r\n * model\r\n */\r\nexport default class extends think.model.base {\r\n    /**\r\n     * 通过用户名称和密码查找登陆用户\r\n     */\r\n    async loadAllMenu(){\r\n        return this.model(\"menu\").where({delstatus:1,ismenu:0}).select();\r\n    }\r\n    /**\r\n     * 根据用户获取当前菜单\r\n     * @param {*} user  当前登陆用户\r\n     */\r\n    async loadMenuByUser(user){\r\n        if(!think.isEmpty(user)){\r\n            \r\n        }\r\n    }\r\n    /**\r\n     * 根据URL获取当前菜单\r\n     * @param {*} user  当前登陆用户\r\n     */\r\n    async loadMenuByUrl(url){\r\n        return this.model(\"menu\").where({url:url,delstatus:1,ismenu:1}).find();\r\n    }\r\n    /**\r\n     * 加载表格菜单\r\n     * @param {*} pid \r\n     * @param {*} offset \r\n     * @param {*} limit \r\n     * @param {*} order \r\n     * @param {*} param \r\n     */\r\n    async loadMenuTable(pid,offset,limit,order,param){\r\n        let data = {total:0,rows:[]};\r\n        let str_where = \"1=1\";\r\n        if(!think.isEmpty(pid)){\r\n            str_where += \" and pid = \"+pid+\" \";\r\n        }\r\n        if(!think.isEmpty(param)){\r\n            str_where += \" and ( name like '%\"+param+\"%' or url like '%\"+param+\"%')\";\r\n        }      \r\n        let countSql = await this.model(\"menu\").where(str_where).count();\r\n        if(countSql>0){\r\n            data.total = countSql;\r\n            let result = await this.model(\"menu\").where(str_where).order(\"sort asc\").limit(offset,limit).select();\r\n            data.rows= result;\r\n        }\r\n        return data;\r\n    }\r\n    /**\r\n     * 新增菜单\r\n     * @param {*} menu \r\n     */\r\n    async addMenu(menu){\r\n        return this.model(\"menu\").thenAdd(menu,{code:menu.code});\r\n    }\r\n    /**\r\n     * 根据ID 查询菜单\r\n     * @param {*} id \r\n     */\r\n    async findMenuById(id){\r\n        return await this.model(\"menu\").where({id:id}).find();\r\n    }\r\n   /**\r\n    * 删除菜单\r\n    * @param {*} id \r\n    */\r\n    async delMenu(id){\r\n        return await this.model(\"menu\").where({id:id}).delete();\r\n    }\r\n    /**\r\n     * 更新排序\r\n     * @param {*} data \r\n     */\r\n    async sortMenu(data){\r\n        return this.model(\"menu\").updateMany(data);  \r\n    }\r\n\r\n}"
    ]
}