{
    "version": 3,
    "sources": [
        "../../../src/admin/controller/dictgroup.js"
    ],
    "names": [
        "init",
        "http",
        "indexAction",
        "display",
        "loaddictgroupAction",
        "model",
        "loadDictGroupTable",
        "post",
        "param",
        "data",
        "think",
        "log",
        "json",
        "editAction",
        "editdictgroupAction",
        "addAction",
        "adddictgroupAction",
        "loadtreeAction",
        "loadDictGroupTree",
        "result",
        "statusAction",
        "rsp",
        "status",
        "msg",
        "config",
        "isEmpty",
        "updateStatus"
    ],
    "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;qBAIIA,I,iBAAKC,I,EAAK;AACN,aAAKA,IAAL,GAAYA,IAAZ;AACH,K;AACD;;;;;qBAGMC,W;;;;;;6DACK,KAAKC,OAAL,E;;;;;;;;;;;;;;;;AAEX;;;;;qBAGMC,mB;;;;;;;;mCACgB,KAAKC,KAAL,CAAW,WAAX,EAAwBC,kBAAxB,CAA2C,KAAKC,IAAL,CAAU,KAAV,KAAkB,CAA7D,EAA+D,KAAKA,IAAL,CAAU,QAAV,CAA/D,EAAmF,KAAKA,IAAL,CAAU,OAAV,CAAnF,EAAsG,IAAtG,EAA2G,KAAKC,KAAL,CAAW,OAAX,CAA3G,C;;;AAAbC,gC;;AACLC,kCAAMC,GAAN,CAAUF,IAAV;8DACO,KAAKG,IAAL,CAAUH,IAAV,C;;;;;;;;;;;;;;;;AAEX;;;;;qBAGMI,U;;;;;;8DACK,KAAKV,OAAL,E;;;;;;;;;;;;;;;;;qBAELW,mB;;;;;;;;;;;;;;;;;;;AAGN;;;;;qBAGMC,S;;;;;;8DACK,KAAKZ,OAAL,E;;;;;;;;;;;;;;;;;qBAELa,kB;;;;;;;;;;;;;;;;;;;AAGN;;;;;qBAGMC,c;;;;;;;;mCACkB,KAAKZ,KAAL,CAAW,WAAX,EAAwBa,iBAAxB,E;;;AAAhBC,kC;8DACG,KAAKP,IAAL,CAAUO,MAAV,C;;;;;;;;;;;;;;;;AAEX;;;;;qBAGMC,Y;;;;;;;AACEC,+B,GAAM;AACNC,wCAAO,CAAC,CADF;AAENC,qCAAIb,MAAMc,MAAN,CAAa,kBAAb;AAFE,6B;;kCAIP,CAACd,MAAMe,OAAN,CAAc,KAAKjB,KAAL,CAAW,IAAX,CAAd,CAAD,IAAkC,CAACE,MAAMe,OAAN,CAAc,KAAKjB,KAAL,CAAW,QAAX,CAAd,C;;;;;;mCACf,KAAKH,KAAL,CAAW,WAAX,EAAwBqB,YAAxB,CAAqC,KAAKlB,KAAL,CAAW,IAAX,CAArC,EAAsD,KAAKA,KAAL,CAAW,QAAX,CAAtD,C;;;AAAfW,kC;;AACJ,gCAAG,CAACT,MAAMe,OAAN,CAAcN,MAAd,CAAJ,EAA0B;AACtBE,oCAAIC,MAAJ,GAAa,CAAb;AACAD,oCAAIE,GAAJ,GAAUb,MAAMc,MAAN,CAAa,qBAAb,CAAV;AACH;;;;;AAGDH,gCAAIE,GAAJ,GAAUb,MAAMc,MAAN,CAAa,qBAAb,CAAV;;;8DAEG,KAAKZ,IAAL,CAAUS,GAAV,C",
    "file": "../../../src/admin/controller/dictgroup.js",
    "sourcesContent": [
        "// +----------------------------------------------------------------------\r\n// | ThinkJS-RABC [ 通用权限管理系统 ]\r\n// +----------------------------------------------------------------------\r\n// | Nanjing Digital Technology Co., Ltd.\r\n// +----------------------------------------------------------------------\r\n// | Copyright (c) 2017 http://www.51-health.com All rights reserved.\r\n// +----------------------------------------------------------------------\r\n// | Author: Devlin <Devlinheart@qq.com>\r\n// +----------------------------------------------------------------------\r\n// | Create: 2017-06-20\r\n// +----------------------------------------------------------------------\r\n\r\n'use strict';\r\n\r\nimport Base from './base.js';\r\n\r\nexport default class extends Base {\r\n\r\n    init(http){\r\n        this.http = http;\r\n    }\r\n    /**\r\n     * 加载页面\r\n     */\r\n    async indexAction(){\r\n        return this.display();\r\n    }\r\n    /**\r\n     * 加载字典组列表\r\n     */\r\n    async loaddictgroupAction(){\r\n        let  data = await this.model(\"dictgroup\").loadDictGroupTable(this.post(\"pid\")||0,this.post(\"offset\"),this.post(\"limit\"),\"id\",this.param(\"param\"));\r\n        think.log(data);\r\n        return this.json(data);\r\n    }\r\n    /**\r\n     * 编辑\r\n     */\r\n    async editAction(){\r\n        return this.display();\r\n    }\r\n    async editdictgroupAction(){\r\n        \r\n    }\r\n    /**\r\n     * 添加\r\n     */\r\n    async addAction(){\r\n        return this.display();\r\n    }\r\n    async adddictgroupAction(){\r\n\r\n    }   \r\n    /**\r\n     * 加载字典组树\r\n     */\r\n    async loadtreeAction(){\r\n        let result =  await this.model(\"dictgroup\").loadDictGroupTree();\r\n        return this.json(result);\r\n    }\r\n    /**\r\n     *设置状态 \r\n     */\r\n    async statusAction(){\r\n        let rsp = {\r\n            status:-1,\r\n            msg:think.config(\"message.fail_msg\")\r\n        }\r\n        if(!think.isEmpty(this.param(\"id\"))&&!think.isEmpty(this.param(\"status\"))){\r\n            let result = await this.model(\"dictgroup\").updateStatus(this.param(\"id\"),this.param(\"status\"));\r\n            if(!think.isEmpty(result)){\r\n                rsp.status = 1;\r\n                rsp.msg = think.config(\"message.success_msg\");\r\n            }\r\n        }   \r\n        else{\r\n            rsp.msg = think.config(\"message.empty_param\");\r\n        }\r\n        return this.json(rsp);\r\n    }\r\n}"
    ]
}